num_to_well <- function(numbers, style = normal){
# numbers as column from data frame of as a vector of numbers?
# can we have input as either and convert to most appropriate?
# dataframe containing all wells in order (normal)
well_list <- structure(list(
well = structure(1:96,.Label = c(
"A01", "A02",
"A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11",
"A12", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08",
"B09", "B10", "B11", "B12", "C01", "C02", "C03", "C04", "C05",
"C06", "C07", "C08", "C09", "C10", "C11", "C12", "D01", "D02",
"D03", "D04", "D05", "D06", "D07", "D08", "D09", "D10", "D11",
"D12", "E01", "E02", "E03", "E04", "E05", "E06", "E07", "E08",
"E09", "E10", "E11", "E12", "F01", "F02", "F03", "F04", "F05",
"F06", "F07", "F08", "F09", "F10", "F11", "F12", "G01", "G02",
"G03", "G04", "G05", "G06", "G07", "G08", "G09", "G10", "G11",
"G12", "H01", "H02", "H03", "H04", "H05", "H06", "H07", "H08",
"H09", "H10", "H11", "H12"),class = "factor")),
.Names = "well", class = "data.frame", row.names = c(NA, -96L))
well_list <- as.vector(well_list$well)
numbers_vector <- as.vector(numbers)
value <- function(x){return(well_list[x,])}
return(
as.vector(sapply(numbers_vector, value))
)
#--------------------------------------------------------------------------
#     platemap <- mutate(platemap,
#                        Row=as.numeric(match(toupper(substr(well, 1, 1)), LETTERS)),
#                        Column=as.numeric(substr(well, 2, 5)))
#
}
num_to_well(ex_num$well_no)
num_to_well <- function(numbers, style = normal){
# numbers as column from data frame of as a vector of numbers?
# can we have input as either and convert to most appropriate?
# dataframe containing all wells in order (normal)
well_list <- structure(list(
well = structure(1:96,.Label = c(
"A01", "A02",
"A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11",
"A12", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08",
"B09", "B10", "B11", "B12", "C01", "C02", "C03", "C04", "C05",
"C06", "C07", "C08", "C09", "C10", "C11", "C12", "D01", "D02",
"D03", "D04", "D05", "D06", "D07", "D08", "D09", "D10", "D11",
"D12", "E01", "E02", "E03", "E04", "E05", "E06", "E07", "E08",
"E09", "E10", "E11", "E12", "F01", "F02", "F03", "F04", "F05",
"F06", "F07", "F08", "F09", "F10", "F11", "F12", "G01", "G02",
"G03", "G04", "G05", "G06", "G07", "G08", "G09", "G10", "G11",
"G12", "H01", "H02", "H03", "H04", "H05", "H06", "H07", "H08",
"H09", "H10", "H11", "H12"),class = "factor")),
.Names = "well", class = "data.frame", row.names = c(NA, -96L))
well_list <- as.vector(well_list$well)
numbers_vector <- as.vector(numbers)
value <- function(x){return(well_list[x,])}
return((sapply(numbers_vector, value))
#--------------------------------------------------------------------------
#     platemap <- mutate(platemap,
#                        Row=as.numeric(match(toupper(substr(well, 1, 1)), LETTERS)),
#                        Column=as.numeric(substr(well, 2, 5)))
#
}
num_to_well <- function(numbers, style = normal){
# numbers as column from data frame of as a vector of numbers?
# can we have input as either and convert to most appropriate?
# dataframe containing all wells in order (normal)
well_list <- structure(list(
well = structure(1:96,.Label = c(
"A01", "A02",
"A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11",
"A12", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08",
"B09", "B10", "B11", "B12", "C01", "C02", "C03", "C04", "C05",
"C06", "C07", "C08", "C09", "C10", "C11", "C12", "D01", "D02",
"D03", "D04", "D05", "D06", "D07", "D08", "D09", "D10", "D11",
"D12", "E01", "E02", "E03", "E04", "E05", "E06", "E07", "E08",
"E09", "E10", "E11", "E12", "F01", "F02", "F03", "F04", "F05",
"F06", "F07", "F08", "F09", "F10", "F11", "F12", "G01", "G02",
"G03", "G04", "G05", "G06", "G07", "G08", "G09", "G10", "G11",
"G12", "H01", "H02", "H03", "H04", "H05", "H06", "H07", "H08",
"H09", "H10", "H11", "H12"),class = "factor")),
.Names = "well", class = "data.frame", row.names = c(NA, -96L))
well_list <- as.vector(well_list$well)
numbers_vector <- as.vector(numbers)
value <- function(x){return(well_list[x,])}
return((sapply(numbers_vector, value)))
#--------------------------------------------------------------------------
#     platemap <- mutate(platemap,
#                        Row=as.numeric(match(toupper(substr(well, 1, 1)), LETTERS)),
#                        Column=as.numeric(substr(well, 2, 5)))
#
}
num_to_well(ex_num$well_no)
num_to_well <- function(numbers, style = normal){
# numbers as column from data frame of as a vector of numbers?
# can we have input as either and convert to most appropriate?
# dataframe containing all wells in order (normal)
well_list <- structure(list(
well = structure(1:96,.Label = c(
"A01", "A02",
"A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11",
"A12", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08",
"B09", "B10", "B11", "B12", "C01", "C02", "C03", "C04", "C05",
"C06", "C07", "C08", "C09", "C10", "C11", "C12", "D01", "D02",
"D03", "D04", "D05", "D06", "D07", "D08", "D09", "D10", "D11",
"D12", "E01", "E02", "E03", "E04", "E05", "E06", "E07", "E08",
"E09", "E10", "E11", "E12", "F01", "F02", "F03", "F04", "F05",
"F06", "F07", "F08", "F09", "F10", "F11", "F12", "G01", "G02",
"G03", "G04", "G05", "G06", "G07", "G08", "G09", "G10", "G11",
"G12", "H01", "H02", "H03", "H04", "H05", "H06", "H07", "H08",
"H09", "H10", "H11", "H12"),class = "factor")),
.Names = "well", class = "data.frame", row.names = c(NA, -96L))
numbers_vector <- as.vector(numbers)
value <- function(x){return(well_list[x,])}
return((sapply(numbers_vector, value)))
#--------------------------------------------------------------------------
#     platemap <- mutate(platemap,
#                        Row=as.numeric(match(toupper(substr(well, 1, 1)), LETTERS)),
#                        Column=as.numeric(substr(well, 2, 5)))
#
}
num_to_well(ex_num$well_no)
num_to_well <- function(numbers, style = normal){
# numbers as column from data frame of as a vector of numbers?
# can we have input as either and convert to most appropriate?
# dataframe containing all wells in order (normal)
well_list <- structure(list(
well = structure(1:96,.Label = c(
"A01", "A02",
"A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11",
"A12", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08",
"B09", "B10", "B11", "B12", "C01", "C02", "C03", "C04", "C05",
"C06", "C07", "C08", "C09", "C10", "C11", "C12", "D01", "D02",
"D03", "D04", "D05", "D06", "D07", "D08", "D09", "D10", "D11",
"D12", "E01", "E02", "E03", "E04", "E05", "E06", "E07", "E08",
"E09", "E10", "E11", "E12", "F01", "F02", "F03", "F04", "F05",
"F06", "F07", "F08", "F09", "F10", "F11", "F12", "G01", "G02",
"G03", "G04", "G05", "G06", "G07", "G08", "G09", "G10", "G11",
"G12", "H01", "H02", "H03", "H04", "H05", "H06", "H07", "H08",
"H09", "H10", "H11", "H12"),class = "factor")),
.Names = "well", class = "data.frame", row.names = c(NA, -96L))
numbers_vector <- as.vector(numbers)
value <- function(x){return(well_list[x,])}
return((as.vector(sapply(numbers_vector, value))))
#--------------------------------------------------------------------------
#     platemap <- mutate(platemap,
#                        Row=as.numeric(match(toupper(substr(well, 1, 1)), LETTERS)),
#                        Column=as.numeric(substr(well, 2, 5)))
#
}
num_to_well(ex_num$well_no)
wound_good_master <- read.csv("~/wound_good_master.csv")
View(wound_good_master)
library(ggplot2)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
facet_grid(compound ~ environment)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
scale_colour_gradient2(high = "red", low = "blue") +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
scale_colour_gradient2(high = "red", low = "blue", mid = "red") +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
scale_colour_gradient2(high = "red", low = "darkblue", mid = "purple") +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
scale_colour_gradient2() +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray", high = "red") +
facet_grid(environment ~ compound)
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess") +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray", high = "red") +
facet_grid(environment ~ compound) +
theme_bw()
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray", high = "red") +
facet_grid(environment ~ compound) +
theme_bw()
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkred", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkred", mid = "orange", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkred", mid = "orange", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkblue", mid = "gray20", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkblue", mid = "gray10", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkblue", mid = "gray60", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkblue", mid = "gray60", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "darkblue", mid = "gray60", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient(low = "darkblue", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient(low = "blue", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient(low = "blue", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient(low = "darkblue", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "darkblue", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "blue", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray70", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray70", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray70", high = "darkred") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray70", high = "red") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray70", high = "red", "log\nconc") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
ggplot(data = wound_good_master,
aes(x = Elapsed,
y = rwd,
group = concentration,
colour = log10(concentration))) +
geom_smooth(method = "loess", se = FALSE) +
xlim(c(-10, 60)) +
scale_colour_gradient2(low = "blue", mid = "gray70", high = "red", "log\nconc (uM)") +
facet_grid(environment ~ compound) +
theme_bw() +
ylab("Relative Wound Density (%)") +
xlab("Time (hours)") +
ggtitle("MDA-MB-231 Scratch Wound")
